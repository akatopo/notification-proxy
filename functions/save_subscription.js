const crypto = require('crypto');
const prop = require('lodash/fp/prop');
const { addSubscriptionToDevice } = require('../db/device-store');
const { tryRemoveOtp } = require('../db/otp-store');

/**
* Registers a user to a device's notifications.
* Uses a one time password generated by the device and a
* notification subscription object generated by the browser
* @param {string} deviceId device id
* @param {string} otp one time password
* @param {object} subscription `PushSubscription` object
*   (https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription)
* @returns {object}
*/
module.exports = async (deviceId, otp, subscription/* , context */) => {
  if (!isValidSubscription(subscription)) {
    throw new Error('Subscription must have an endpoint.');
  }

  const hash = crypto.createHash('sha256');
  hash.update(otp);
  const otpRemoved = await tryRemoveOtp(deviceId, hash.digest('hex'));
  if (!otpRemoved) {
    throw new Error('Invalid OTP or device id');
  }

  try {
    await addSubscriptionToDevice(deviceId, subscription);
  }
  catch (err) {
    throw new Error('Failed to add subscription');
  }

  return { data: { success: true } };
};

function isValidSubscription(subscription) {
  return !!prop('endpoint', subscription);
}
